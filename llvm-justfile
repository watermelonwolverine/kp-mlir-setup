
build_type := env_var_or_default("LLVM_BUILD_TYPE", "Release")
builddir := "build-" + build_type
c_compiler := "clang"
cxx_compiler := "clang++"
linker := "lld"
projects := "mlir" # semicolon-separated


default: cmake

# note: this is needed on the first build, afterwards ninja refreshes it itself
cmake:
    cmake -Sllvm -B{{builddir}} -GNinja -DCMAKE_BUILD_TYPE={{build_type}} \
    -DLLVM_ENABLE_PROJECTS={{projects}} -DLLVM_CCACHE_BUILD=ON -DLLVM_USE_LINKER={{linker}} \
    -DLLVM_TARGETS_TO_BUILD=X86 -DLLVM_BUILD_TOOLS=OFF \
    -DCMAKE_C_COMPILER={{c_compiler}} -DCMAKE_CXX_COMPILER={{cxx_compiler}}


doNinja *ARGS:
    ninja -C{{builddir}} {{ARGS}}

build: (doNinja) (doNinja "mlir-translate")

printBuildDir:
    echo {{builddir}}

alias b := build 

testMlir: (doNinja "check-mlir")

genMlirHeaders: (doNinja "mlir-generic-headers")
